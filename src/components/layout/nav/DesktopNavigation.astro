---
import type { locale } from "../../../assets/types/i18n";
import { srcset } from "../../../util/srcset";
import { imageSizes } from "../../../util/imageSizes";
import FlagUK from "../../icons/FlagUK.astro";
import { navigationTranslations } from "../../../translations/nav";
import FlagBulgaria from "../../icons/FlagBulgaria.astro";
import { navigationLinks } from "../../../common/navigation";
import Link from "../../common/Link.astro";

interface Props {
  language: locale;
  page: string;
  is404?: boolean;
}

const { language, page, is404 } = Astro.props;
const href = (lang: locale) => (page === "" ? "/" + lang : `/${lang}/${page}`);

const logos = srcset([
  ["logo_studio_dada.png", 1575],
  ["logo_studio_dada.png", 1575],
  ["logo_studio_dada.png", 1575],
  ["logo_studio_dada.png", 1575],
]);

const sizes = imageSizes([170, 250, 290, 504]);
---

<nav class="hidden bg-black lg:flex justify-between items-center p-4">
  <a href={`/${language}`} class="focus-item transition-colors">
    <img
      class="rounded-xs"
      srcset={logos}
      sizes={sizes}
      alt={navigationTranslations[language].logo}
    />
  </a>
  <div class="flex items-center gap-8">
    {
      is404 ? null : (
        <Fragment>
          {language === "bg" ? (
            <a
              href={href("en")}
              class="focus-item transition-colors border border-brand-white flex w-max p-0.5 rounded-sm"
              aria-description="Смени на английски език / switch to English"
              title="Смени на английски език / switch to English"
              hreflang="en"
            >
              <FlagUK size={30} />
            </a>
          ) : (
            <a
              href={href("bg")}
              class="focus-item transition-colors border border-brand-white flex w-max p-0.5 rounded-sm"
              aria-description="Switch to Bulgarian / смени на български език"
              title="Switch to Bulgarian / смени на български език"
              hreflang="bg"
            >
              <FlagBulgaria size={30} />
            </a>
          )}
        </Fragment>
      )
    }

    <ul class="flex gap-8">
      {
        navigationLinks.map((link) => (
          <li class="text-base xl:text-xl">
            <Link
              underline="onhover"
              className="text-brand-white"
              href={link.href(language)}
            >
              {link[language]}
            </Link>
          </li>
        ))
      }
    </ul>
  </div>
</nav>
